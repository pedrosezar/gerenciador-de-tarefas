{"ast":null,"code":"import { TaskService } from \"./../services/task.service\";\nimport { Task } from \"./../model/task\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction FormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"red\", !ctx_r0.isSuccess)(\"blue\", ctx_r0.isSuccess);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nexport class FormComponent {\n  constructor(taskService, route) {\n    this.taskService = taskService;\n    this.route = route;\n    this.isShowMessage = false;\n    this.task = new Task(\"\");\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.listTask();\n    this.listTasks();\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    this.taskService.saveOrUpdate(this.task).subscribe(data => {\n      this.isShowMessage = true;\n      this.isSuccess = true;\n      this.message = \"Cadastro realizado com sucesso!\";\n      this.form.reset();\n      this.task = new Task(\"\");\n      this.listTasks();\n    }, error => {\n      alert(\"Houve um erro!\");\n    });\n  }\n  listTasks() {\n    this.taskService.getTasks().subscribe(tasks => {\n      this.tasks = tasks;\n    }, error => {\n      console.log(\"Erro\");\n    }, () => {\n      console.log(\"Concluído\");\n    });\n  }\n  listTask() {\n    var stringToConvert = \"730\";\n    var numberValue = Number(stringToConvert);\n    this.taskService.getById(numberValue).subscribe(next, task => {\n      this.task = task;\n    }, error, () => {\n      console.log('Aconteceu um erro');\n    }, complete, () => {\n      console.log('Concluído');\n    });\n    this.obs.subscribe(val => {\n      console.log(val);\n    },\n    //chamada de next\n    //chamada de next\n    error => {\n      console.log(\"erro\");\n    },\n    //chamada de erro\n    () => {\n      console.log(\"Concluído\");\n    } //chamada de complete\n    );\n\n    this.obs.subscribe({\n      next: val => {\n        console.log(val);\n      },\n      error: error => {\n        console.log('erro');\n      },\n      complete: () => {\n        console.log('Concluído');\n      } //chamada de complete\n    });\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    viewQuery: function FormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([TaskService])],\n    decls: 23,\n    vars: 5,\n    consts: [[1, \"row\"], [1, \"col\", \"s12\"], [\"id\", \"msg-login\", \"class\", \"card-panel white-text\", 3, \"red\", \"blue\", 4, \"ngIf\"], [1, \"col\", \"s12\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"input-field\", \"col\", \"s12\"], [\"id\", \"input-title\", \"name\", \"input-title\", \"type\", \"text\", \"pattern\", \"^([A-Z\\u00C0-\\u00DA][a-z\\u00E0-\\u00FA]*)+(\\\\s[a-z\\u00E0-\\u00FA]*)+\", \"required\", \"\", 1, \"validate\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"for\", \"input-title\"], [1, \"red-text\", 3, \"hidden\"], [1, \"input-field\", \"col\", \"s12\", \"l6\"], [\"id\", \"input-date\", \"name\", \"input-date\", \"type\", \"date\", 1, \"validate\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"input-date\"], [1, \"col\", \"s12\", \"l6\"], [\"type\", \"submit\", 1, \"waves-effect\", \"waves-light\", \"btn\", \"orange\", 3, \"disabled\"], [\"id\", \"msg-login\", 1, \"card-panel\", \"white-text\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, FormComponent_div_2_Template, 2, 5, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"submit\", function FormComponent_Template_form_submit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 0)(7, \"div\", 5)(8, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.task.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"T\\u00EDtulo da tarefa *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵtext(13, \" Por favor, informe o t\\u00EDtulo da tarefa. \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 0)(15, \"div\", 10)(16, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.task.date = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Data\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 0)(20, \"div\", 13)(21, \"button\", 14);\n        i0.ɵɵtext(22, \" salvar \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        const _r2 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isShowMessage);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.untouched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.date);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !_r1.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["TaskService","Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","isSuccess","ɵɵadvance","ɵɵtextInterpolate1","message","FormComponent","constructor","taskService","route","isShowMessage","task","tasks","ngOnInit","listTask","listTasks","onSubmit","isSubmitted","saveOrUpdate","subscribe","data","form","reset","error","alert","getTasks","console","log","stringToConvert","numberValue","Number","getById","next","complete","obs","val","_","ɵɵdirectiveInject","i1","i2","ActivatedRoute","_2","selectors","viewQuery","FormComponent_Query","rf","ctx","decls","vars","consts","template","FormComponent_Template","ɵɵtemplate","FormComponent_div_2_Template","ɵɵlistener","FormComponent_Template_form_submit_4_listener","FormComponent_Template_input_ngModelChange_8_listener","$event","title","FormComponent_Template_input_ngModelChange_16_listener","date","ɵɵproperty","_r2","valid","untouched","_r1"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/form/form.component.ts","/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/form/form.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { TaskService } from \"./../services/task.service\";\nimport { Task } from \"./../model/task\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"],\n  providers: [TaskService],\n})\nexport class FormComponent implements OnInit {\n  @ViewChild(\"form\") form!: NgForm;\n\n  task: Task;\n  tasks: Task[];\n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute) {\n    this.task = new Task(\"\");\n    this.tasks = [];\n  }\n\n  ngOnInit(): void {\n    this.listTask();\n    this.listTasks();\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    this.taskService.saveOrUpdate(this.task).subscribe(\n      (data) => {\n        this.isShowMessage = true;\n        this.isSuccess = true;\n        this.message = \"Cadastro realizado com sucesso!\";\n        this.form.reset();\n        this.task = new Task(\"\");\n        this.listTasks();\n      },\n      (error) => {\n        alert(\"Houve um erro!\");\n      }\n    );\n  }\n\n  listTasks() {\n    this.taskService.getTasks().subscribe(\n      (tasks) => {\n        this.tasks = tasks;\n      },\n      (error) => {\n        console.log(\"Erro\");\n      },\n      () => {\n        console.log(\"Concluído\");\n      }\n    );\n  }\n\n  listTask() {\n    var stringToConvert = \"730\";\n    var numberValue = Number(stringToConvert);\n    this.taskService.getById(numberValue).subscribe(\n      next: (task) => {\n        this.task = task;\n      },\n      error: () => {\n        console.log('Aconteceu um erro');\n      },\n      complete: () => {\n        console.log('Concluído');\n      }\n    );\n\n    this.obs.subscribe(\n      val => { console.log(val) }, //chamada de next\n      error => { console.log(\"erro\") }, //chamada de erro\n      () => { console.log(\"Concluído\") } //chamada de complete\n    )\n\n    this.obs.subscribe( \n      {\n        next: (val) => {\n          console.log(val);\n        }, //chamada de next\n        error: (error) => {\n          console.log('erro');\n        }, //chamada de erro\n        complete: () => {\n          console.log('Concluído');\n         } //chamada de complete\n      }\n    );\n  \n  }\n}\n","<div class=\"row\">\n  <div class=\"col s12\">\n    <div\n      id=\"msg-login\"\n      class=\"card-panel white-text\"\n      [class.red]=\"!this.isSuccess\"\n      [class.blue]=\"this.isSuccess\"\n      *ngIf=\"this.isShowMessage\"\n    >\n      {{ this.message }}\n    </div>\n  </div>\n  <div class=\"row\">\n    <form class=\"col s12\" #form=\"ngForm\" (submit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"input-field col s12\">\n          <input\n            id=\"input-title\"\n            name=\"input-title\"\n            type=\"text\"\n            class=\"validate\"\n            [(ngModel)]=\"this.task.title\"\n            pattern=\"^([A-ZÀ-Ú][a-zà-ú]*)+(\\s[a-zà-ú]*)+\"\n            #title=\"ngModel\"\n            required\n          />\n          <label for=\"input-title\">Título da tarefa *</label>\n          <div class=\"red-text\" [hidden]=\"title.valid || title.untouched\">\n            Por favor, informe o título da tarefa.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"input-field col s12 l6\">\n          <input\n            id=\"input-date\"\n            name=\"input-date\"\n            type=\"date\"\n            class=\"validate\"\n            [(ngModel)]=\"this.task.date\"\n          />\n          <label for=\"input-date\">Data</label>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col s12 l6\">\n          <button\n            class=\"waves-effect waves-light btn orange\"\n            type=\"submit\"\n            [disabled]=\"!form.valid\"\n          >\n            salvar\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}