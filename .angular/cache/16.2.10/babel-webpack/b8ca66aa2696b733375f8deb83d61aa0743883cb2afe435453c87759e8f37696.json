{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3000/tasks\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n  }\n  getTasks() {\n    return this.http.get(this.URL);\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/${id}`);\n  }\n  save(task) {\n    return lastValueFrom(this.http.post(this.URL, JSON.stringify(task), this.httpOptions));\n  }\n  /*\n  save(task: Task): Observable<Task> {\n    return this.http.post<Task>(this.URL, task);\n  }\n  */\n  update(task) {\n    return this.http.patch(`${this.URL}/${task.id}`, task);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","lastValueFrom","TaskService","constructor","http","URL","httpOptions","headers","getTasks","get","getById","id","save","task","post","JSON","stringify","update","patch","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { Task } from \"./../model/task\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private URL = \"http://localhost:3000/tasks\";\n\n  httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.URL);\n  }\n\n  getById(id: number): Observable<Task> {\n    return this.http.get<Task>(`${this.URL}/${id}`);\n  }\n\n  save(task: Task): Promise<Task> {\n    return lastValueFrom(\n      this.http.post<Task>(this.URL, JSON.stringify(task), this.httpOptions)\n    );\n  }\n\n  /*\n  save(task: Task): Observable<Task> {\n    return this.http.post<Task>(this.URL, task);\n  }\n*/\n  update(task: Task): Observable<Task> {\n    return this.http.patch(`${this.URL}/${task.id}`, task);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,aAAa,QAAQ,MAAM;;;AAOpC,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,GAAG,GAAG,6BAA6B;IAE3C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEsC;EAEvCQ,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,IAAI,CAACJ,GAAG,CAAC;EACxC;EAEAK,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAO,GAAG,IAAI,CAACJ,GAAG,IAAIM,EAAE,EAAE,CAAC;EACjD;EAEAC,IAAIA,CAACC,IAAU;IACb,OAAOZ,aAAa,CAClB,IAAI,CAACG,IAAI,CAACU,IAAI,CAAO,IAAI,CAACT,GAAG,EAAEU,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE,IAAI,CAACP,WAAW,CAAC,CACvE;EACH;EAEA;;;;;EAKAW,MAAMA,CAACJ,IAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACc,KAAK,CAAC,GAAG,IAAI,CAACb,GAAG,IAAIQ,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EACxD;EAEAM,MAAMA,CAACR,EAAU;IACf,OAAO,IAAI,CAACP,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACd,GAAG,IAAIM,EAAE,EAAE,CAAC;EAC9C;EAAC,QAAAS,CAAA,G;qBAlCUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}