{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { TaskService } from \"../services/task.service\";\nimport { Task } from \"../model/task\";\nexport let FormComponent = class FormComponent {\n  constructor(taskService, route) {\n    this.taskService = taskService;\n    this.route = route;\n    this.isShowMessage = false;\n  }\n  ngOnInit() {\n    const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    if (id === 0) {\n      this.task = new Task(\"\");\n    } else {\n      this.taskService.getById(id).subscribe(item => this.task = item);\n    }\n    console.log(this.task);\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.task.title != \"\") {\n      this.taskService.save(this.task).subscribe(data => {\n        this.isShowMessage = true;\n        this.isSuccess = true;\n        this.message = \"Tarefa inserida com sucesso!\";\n        this.form.reset();\n      }, error => {\n        alert(\"Houve um erro!\");\n      });\n    } else {\n      this.taskService.update(this.task).subscribe(data => {\n        this.isShowMessage = true;\n        this.isSuccess = true;\n        this.message = \"Tarefa alterada com sucesso!\";\n        this.form.reset();\n      }, error => {\n        alert(\"Houve um erro!\");\n      });\n    }\n  }\n};\n__decorate([ViewChild(\"form\")], FormComponent.prototype, \"form\", void 0);\nFormComponent = __decorate([Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"],\n  providers: [TaskService]\n})], FormComponent);","map":{"version":3,"names":["Component","ViewChild","TaskService","Task","FormComponent","constructor","taskService","route","isShowMessage","ngOnInit","id","Number","snapshot","paramMap","get","task","getById","subscribe","item","console","log","onSubmit","isSubmitted","title","save","data","isSuccess","message","form","reset","error","alert","update","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/TÃ³picos Especiais/gerenciador-de-tarefas/src/app/create/create.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\nimport { TaskService } from \"../services/task.service\";\nimport { Task } from \"../model/task\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"],\n  providers: [TaskService],\n})\nexport class FormComponent implements OnInit {\n  @ViewChild(\"form\") form!: NgForm;\n\n  task!: Task;\n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n\n  constructor(\n    private taskService: TaskService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    const id = Number(this.route.snapshot.paramMap.get(\"id\"));\n    if (id === 0) {\n      this.task = new Task(\"\");\n    } else {\n      this.taskService.getById(id).subscribe((item) => (this.task = item));\n    }\n    console.log(this.task);\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n\n    if (this.task.title != \"\") {\n      this.taskService.save(this.task).subscribe(\n        (data) => {\n          this.isShowMessage = true;\n          this.isSuccess = true;\n          this.message = \"Tarefa inserida com sucesso!\";\n          this.form.reset();\n        },\n        (error) => {\n          alert(\"Houve um erro!\");\n        }\n      );\n    } else {\n      this.taskService.update(this.task).subscribe(\n        (data) => {\n          this.isShowMessage = true;\n          this.isSuccess = true;\n          this.message = \"Tarefa alterada com sucesso!\";\n          this.form.reset();\n        },\n        (error) => {\n          alert(\"Houve um erro!\");\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAG5D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,IAAI,QAAQ,eAAe;AAS7B,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAUxBC,YACUC,WAAwB,EACxBC,KAAqB;IADrB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IANf,KAAAC,aAAa,GAAY,KAAK;EAO3B;EAEHC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IACzD,IAAIJ,EAAE,KAAK,CAAC,EAAE;MACZ,IAAI,CAACK,IAAI,GAAG,IAAIZ,IAAI,CAAC,EAAE,CAAC;KACzB,MAAM;MACL,IAAI,CAACG,WAAW,CAACU,OAAO,CAACN,EAAE,CAAC,CAACO,SAAS,CAAEC,IAAI,IAAM,IAAI,CAACH,IAAI,GAAGG,IAAK,CAAC;;IAEtEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,IAAI,CAAC;EACxB;EAEAM,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI;IAEvB,IAAI,IAAI,CAACP,IAAI,CAACQ,KAAK,IAAI,EAAE,EAAE;MACzB,IAAI,CAACjB,WAAW,CAACkB,IAAI,CAAC,IAAI,CAACT,IAAI,CAAC,CAACE,SAAS,CACvCQ,IAAI,IAAI;QACP,IAAI,CAACjB,aAAa,GAAG,IAAI;QACzB,IAAI,CAACkB,SAAS,GAAG,IAAI;QACrB,IAAI,CAACC,OAAO,GAAG,8BAA8B;QAC7C,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACnB,CAAC,EACAC,KAAK,IAAI;QACRC,KAAK,CAAC,gBAAgB,CAAC;MACzB,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACzB,WAAW,CAAC0B,MAAM,CAAC,IAAI,CAACjB,IAAI,CAAC,CAACE,SAAS,CACzCQ,IAAI,IAAI;QACP,IAAI,CAACjB,aAAa,GAAG,IAAI;QACzB,IAAI,CAACkB,SAAS,GAAG,IAAI;QACrB,IAAI,CAACC,OAAO,GAAG,8BAA8B;QAC7C,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACnB,CAAC,EACAC,KAAK,IAAI;QACRC,KAAK,CAAC,gBAAgB,CAAC;MACzB,CAAC,CACF;;EAEL;CACD;AArDoBE,UAAA,EAAlBhC,SAAS,CAAC,MAAM,CAAC,C,0CAAe;AADtBG,aAAa,GAAA6B,UAAA,EANzBjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB,CAAC;EACnCC,SAAS,EAAE,CAACnC,WAAW;CACxB,CAAC,C,EACWE,aAAa,CAsDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}