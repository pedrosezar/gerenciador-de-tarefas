{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction EditComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"red\", !ctx_r0.isSuccess)(\"blue\", ctx_r0.isSuccess);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction EditComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 5, 6);\n    i0.ɵɵlistener(\"submit\", function EditComponent_div_3_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 7)(5, \"input\", 8, 9);\n    i0.ɵɵlistener(\"ngModelChange\", function EditComponent_div_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.task.title = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 10);\n    i0.ɵɵtext(8, \"T\\u00EDtulo da tarefa *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 11);\n    i0.ɵɵtext(10, \" Por favor, informe o t\\u00EDtulo da tarefa. \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 0)(12, \"div\", 12)(13, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function EditComponent_div_3_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.task.date = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"label\", 14);\n    i0.ɵɵtext(15, \"Data\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 0)(17, \"div\", 15)(18, \"button\", 16);\n    i0.ɵɵtext(19, \" salvar \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(2);\n    const _r3 = i0.ɵɵreference(6);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.task.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.untouched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.task.date);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", !_r2.valid);\n  }\n}\nexport let EditComponent = /*#__PURE__*/(() => {\n  class EditComponent {\n    constructor(taskService, route) {\n      this.taskService = taskService;\n      this.route = route;\n      this.isShowMessage = false;\n      this.task = {\n        id: this.route.snapshot.params[\"id\"],\n        title: \"\",\n        status: false,\n        date: new Date()\n      };\n    }\n    ngOnInit() {\n      this.taskService.getById(this.route.snapshot.params[\"id\"]).subscribe({\n        next: data => {\n          this.task = data;\n        },\n        error: e => console.error(e)\n      });\n    }\n    onSubmit() {\n      this.isSubmitted = true;\n      const data = {\n        title: this.task.title,\n        status: this.task.status,\n        date: this.task.date,\n        id: this.task.id\n      };\n      this.taskService.update(data).subscribe({\n        next: res => {\n          this.isShowMessage = true;\n          this.isSuccess = true;\n          this.message = \"Tarefa alterada com sucesso!\";\n          this.form.reset();\n        },\n        error: () => {\n          this.isShowMessage = true;\n          this.isSuccess = false;\n          this.message = \"Erro ao alterar a tarefa\";\n        }\n      });\n    }\n    static #_ = this.ɵfac = function EditComponent_Factory(t) {\n      return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditComponent,\n      selectors: [[\"app-edit\"]],\n      viewQuery: function EditComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n        }\n      },\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"row\"], [1, \"col\", \"s12\"], [\"id\", \"msg-login\", \"class\", \"card-panel white-text\", 3, \"red\", \"blue\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"id\", \"msg-login\", 1, \"card-panel\", \"white-text\"], [1, \"col\", \"s12\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"input-field\", \"col\", \"s12\"], [\"id\", \"input-title\", \"name\", \"input-title\", \"type\", \"text\", \"pattern\", \"^([A-Z\\u00C0-\\u00DA][a-z\\u00E0-\\u00FA]*)+(\\\\s[a-z\\u00E0-\\u00FA]*)+\", \"required\", \"\", 1, \"validate\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"for\", \"input-title\"], [1, \"red-text\", 3, \"hidden\"], [1, \"input-field\", \"col\", \"s12\", \"l6\"], [\"id\", \"input-date\", \"name\", \"input-date\", \"type\", \"date\", 1, \"validate\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"input-date\"], [1, \"col\", \"s12\", \"l6\"], [\"type\", \"submit\", 1, \"waves-effect\", \"waves-light\", \"btn\", \"orange\", 3, \"disabled\"]],\n      template: function EditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, EditComponent_div_2_Template, 2, 5, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, EditComponent_div_3_Template, 20, 4, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isShowMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.task);\n        }\n      },\n      dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm]\n    });\n  }\n  return EditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}