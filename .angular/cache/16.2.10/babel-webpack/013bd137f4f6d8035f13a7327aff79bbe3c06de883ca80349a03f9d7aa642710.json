{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Shared } from \"./../util/shared\";\nimport { Task } from \"./../model/task\";\nimport { WebStorageUtil } from \"./../util/web-storage-util\";\nimport { Constants } from \"./../util/constants\";\nexport let TableComponent = class TableComponent {\n  constructor(taskService, taskPromiseService) {\n    this.taskService = taskService;\n    this.taskPromiseService = taskPromiseService;\n    this.isShowMessage = false;\n  }\n  ngOnInit() {\n    Shared.initializeWebStorage();\n    this.task = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.taskPromiseService.getByTitle(Constants.TASKS_KEY).then(t => {\n      this.task = t[0];\n      localStorage.setItem(Constants.TASKS_KEY, JSON.stringify(Task.toWS(this.task)));\n    }).catch(e => {\n      //erro ao pegar do json-server\n      this.task = WebStorageUtil.get(Constants.TASKS_KEY);\n    });\n    Shared.initializeWebStorage();\n    this.task = new Task(\"\");\n    this.tasks = this.taskService.getTasks();\n  }\n  /**\n   * Realiza o clone do objeto, justamente para não refletir as mudanças\n   * imediatamente na lista de tarefas cadastrados sem pressionar o submit.\n   * @param task\n   */\n  onEdit(task) {\n    let clone = Task.clone(task);\n    this.task = clone;\n  }\n  onDelete(title) {\n    let confirmation = window.confirm(\"Você tem certeza que deseja remover \" + title);\n    if (!confirmation) {\n      return;\n    }\n    let response = this.taskService.delete(title);\n    this.isShowMessage = true;\n    this.isSuccess = response;\n    if (response) {\n      this.message = \"O item foi removido com sucesso!\";\n    } else {\n      this.message = \"Opps! O item não pode ser removido!\";\n    }\n    this.tasks = this.taskService.getTasks();\n  }\n};\nTableComponent = __decorate([Component({\n  selector: \"app-table\",\n  templateUrl: \"./table.component.html\",\n  styleUrls: [\"./table.component.css\"]\n})], TableComponent);","map":{"version":3,"names":["Component","Shared","Task","WebStorageUtil","Constants","TableComponent","constructor","taskService","taskPromiseService","isShowMessage","ngOnInit","initializeWebStorage","task","get","TASKS_KEY","getByTitle","then","t","localStorage","setItem","JSON","stringify","toWS","catch","e","tasks","getTasks","onEdit","clone","onDelete","title","confirmation","window","confirm","response","delete","isSuccess","message","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/table/table.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\n\nimport { Shared } from \"./../util/shared\";\nimport { TaskService } from \"./../services/task.service\";\nimport { TaskPromiseService } from \"./../services/task-promise.service\";\nimport { Task } from \"./../model/task\";\nimport { WebStorageUtil } from \"./../util/web-storage-util\";\nimport { Constants } from \"./../util/constants\";\n\n@Component({\n  selector: \"app-table\",\n  templateUrl: \"./table.component.html\",\n  styleUrls: [\"./table.component.css\"],\n})\nexport class TableComponent implements OnInit {\n  task!: Task;\n  tasks?: Task[];\n\n  isSubmitted!: boolean;\n  isShowMessage: boolean = false;\n  isSuccess!: boolean;\n  message!: string;\n\n  constructor(\n    private taskService: TaskService,\n    private taskPromiseService: TaskPromiseService\n  ) {}\n\n  ngOnInit(): void {\n    Shared.initializeWebStorage();\n    this.task = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.taskPromiseService\n      .getByTitle(Constants.TASKS_KEY)\n      .then((t: Task[]) => {\n        this.task = t[0];\n        localStorage.setItem(\n          Constants.TASKS_KEY,\n          JSON.stringify(Task.toWS(this.task))\n        );\n      })\n      .catch((e) => {\n        //erro ao pegar do json-server\n        this.task = WebStorageUtil.get(Constants.TASKS_KEY);\n      });\n\n    Shared.initializeWebStorage();\n    this.task = new Task(\"\");\n    this.tasks = this.taskService.getTasks();\n  }\n\n  /**\n   * Realiza o clone do objeto, justamente para não refletir as mudanças\n   * imediatamente na lista de tarefas cadastrados sem pressionar o submit.\n   * @param task\n   */\n  onEdit(task: Task) {\n    let clone = Task.clone(task);\n    this.task = clone;\n  }\n\n  onDelete(title: string) {\n    let confirmation = window.confirm(\n      \"Você tem certeza que deseja remover \" + title\n    );\n    if (!confirmation) {\n      return;\n    }\n    let response: boolean = this.taskService.delete(title);\n    this.isShowMessage = true;\n    this.isSuccess = response;\n    if (response) {\n      this.message = \"O item foi removido com sucesso!\";\n    } else {\n      this.message = \"Opps! O item não pode ser removido!\";\n    }\n    this.tasks = this.taskService.getTasks();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,MAAM,QAAQ,kBAAkB;AAGzC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,SAAS,QAAQ,qBAAqB;AAOxC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EASzBC,YACUC,WAAwB,EACxBC,kBAAsC;IADtC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAN5B,KAAAC,aAAa,GAAY,KAAK;EAO3B;EAEHC,QAAQA,CAAA;IACNT,MAAM,CAACU,oBAAoB,EAAE;IAC7B,IAAI,CAACC,IAAI,GAAGT,cAAc,CAACU,GAAG,CAACT,SAAS,CAACU,SAAS,CAAC;IACnD,IAAI,CAACN,kBAAkB,CACpBO,UAAU,CAACX,SAAS,CAACU,SAAS,CAAC,CAC/BE,IAAI,CAAEC,CAAS,IAAI;MAClB,IAAI,CAACL,IAAI,GAAGK,CAAC,CAAC,CAAC,CAAC;MAChBC,YAAY,CAACC,OAAO,CAClBf,SAAS,CAACU,SAAS,EACnBM,IAAI,CAACC,SAAS,CAACnB,IAAI,CAACoB,IAAI,CAAC,IAAI,CAACV,IAAI,CAAC,CAAC,CACrC;IACH,CAAC,CAAC,CACDW,KAAK,CAAEC,CAAC,IAAI;MACX;MACA,IAAI,CAACZ,IAAI,GAAGT,cAAc,CAACU,GAAG,CAACT,SAAS,CAACU,SAAS,CAAC;IACrD,CAAC,CAAC;IAEJb,MAAM,CAACU,oBAAoB,EAAE;IAC7B,IAAI,CAACC,IAAI,GAAG,IAAIV,IAAI,CAAC,EAAE,CAAC;IACxB,IAAI,CAACuB,KAAK,GAAG,IAAI,CAAClB,WAAW,CAACmB,QAAQ,EAAE;EAC1C;EAEA;;;;;EAKAC,MAAMA,CAACf,IAAU;IACf,IAAIgB,KAAK,GAAG1B,IAAI,CAAC0B,KAAK,CAAChB,IAAI,CAAC;IAC5B,IAAI,CAACA,IAAI,GAAGgB,KAAK;EACnB;EAEAC,QAAQA,CAACC,KAAa;IACpB,IAAIC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAC/B,sCAAsC,GAAGH,KAAK,CAC/C;IACD,IAAI,CAACC,YAAY,EAAE;MACjB;;IAEF,IAAIG,QAAQ,GAAY,IAAI,CAAC3B,WAAW,CAAC4B,MAAM,CAACL,KAAK,CAAC;IACtD,IAAI,CAACrB,aAAa,GAAG,IAAI;IACzB,IAAI,CAAC2B,SAAS,GAAGF,QAAQ;IACzB,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACG,OAAO,GAAG,kCAAkC;KAClD,MAAM;MACL,IAAI,CAACA,OAAO,GAAG,qCAAqC;;IAEtD,IAAI,CAACZ,KAAK,GAAG,IAAI,CAAClB,WAAW,CAACmB,QAAQ,EAAE;EAC1C;CACD;AA/DYrB,cAAc,GAAAiC,UAAA,EAL1BtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWpC,cAAc,CA+D1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}