{"ast":null,"code":"import { lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3000/tasks\";\n  }\n  getTasks() {\n    return this.http.get(this.URL);\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/${id}`);\n  }\n  save(task) {\n    return lastValueFrom(this.http.post(this.URL, task));\n  }\n  update(task) {\n    return this.http.patch(`${this.URL}/${task.id}`, task);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["lastValueFrom","TaskService","constructor","http","URL","getTasks","get","getById","id","save","task","post","update","patch","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { Task } from \"./../model/task\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private URL = \"http://localhost:3000/tasks\";\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.URL);\n  }\n\n  getById(id: number): Observable<Task> {\n    return this.http.get<Task>(`${this.URL}/${id}`);\n  }\n\n  save(task: Task): Promise<Task> {\n    return lastValueFrom(this.http.post<Task>(this.URL, task));\n  }\n\n  update(task: Task): Observable<Task> {\n    return this.http.patch(`${this.URL}/${task.id}`, task);\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n}\n"],"mappings":"AAGA,SAASA,aAAa,QAAQ,MAAM;;;AAOpC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,6BAA6B;EAEJ;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,GAAG,CAAC;EACxC;EAEAG,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,GAAG,IAAII,EAAE,EAAE,CAAC;EACjD;EAEAC,IAAIA,CAACC,IAAU;IACb,OAAOV,aAAa,CAAC,IAAI,CAACG,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACP,GAAG,EAAEM,IAAI,CAAC,CAAC;EAC5D;EAEAE,MAAMA,CAACF,IAAU;IACf,OAAO,IAAI,CAACP,IAAI,CAACU,KAAK,CAAC,GAAG,IAAI,CAACT,GAAG,IAAIM,IAAI,CAACF,EAAE,EAAE,EAAEE,IAAI,CAAC;EACxD;EAEAI,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,GAAG,IAAII,EAAE,EAAE,CAAC;EAC9C;EAAC,QAAAO,CAAA,G;qBAvBUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}