{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3000/tasks\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n  }\n  save(task) {\n    return this.http.post(this.URL, task, this.httpOptions);\n  }\n  update(task) {\n    return this.http.patch(`${this.URL}/${task.id}`, task, this.httpOptions);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n  getTasks() {\n    return this.http.get(this.URL);\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/${id}`);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","TaskService","constructor","http","URL","httpOptions","headers","save","task","post","update","patch","id","delete","getTasks","get","getById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { Task } from \"./../model/task\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private URL = \"http://localhost:3000/tasks\";\n\n  task!: Task;\n  tasks!: Task[];\n\n  httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  save(task: Task): Observable<Task> {\n    return this.http.post<Task>(this.URL, task, this.httpOptions);\n  }\n\n  update(task: Task): Observable<Task> {\n    return this.http.patch<Task>(\n      `${this.URL}/${task.id}`,\n      task,\n      this.httpOptions\n    );\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.URL);\n  }\n\n  getById(id: number): Observable<Task> {\n    return this.http.get<Task>(`${this.URL}/${id}`);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,WAAW;EAUtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAThB,KAAAC,GAAG,GAAG,6BAA6B;IAK3C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEsC;EAEvCO,IAAIA,CAACC,IAAU;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,GAAG,EAAEI,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EAC/D;EAEAK,MAAMA,CAACF,IAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACQ,KAAK,CACpB,GAAG,IAAI,CAACP,GAAG,IAAII,IAAI,CAACI,EAAE,EAAE,EACxBJ,IAAI,EACJ,IAAI,CAACH,WAAW,CACjB;EACH;EAEAQ,MAAMA,CAACD,EAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACT,GAAG,IAAIQ,EAAE,EAAE,CAAC;EAC9C;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAS,IAAI,CAACX,GAAG,CAAC;EACxC;EAEAY,OAAOA,CAACJ,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,GAAG,IAAIQ,EAAE,EAAE,CAAC;EACjD;EAAC,QAAAK,CAAA,G;qBAlCUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}