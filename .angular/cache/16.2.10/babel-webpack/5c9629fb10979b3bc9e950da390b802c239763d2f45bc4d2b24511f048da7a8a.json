{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:3000/tasks\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n  }\n  save(task) {\n    return this.http.post(this.URL, task, this.httpOptions);\n  }\n  saveOrUpdate(task) {\n    if (task.id) {\n      return this.update(task);\n    } else {\n      return this.save(task);\n    }\n  }\n  update(task) {\n    return this.http.put(`${this.URL}/${task.id}`, task, this.httpOptions);\n  }\n  delete(id) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n  getTasks() {\n    return this.http.get(this.URL);\n  }\n  getTask(task) {\n    return this.http.get(this.URL, task, this.httpOptions);\n  }\n  getById(id) {\n    return this.http.get(`${this.URL}/${id}`);\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["HttpHeaders","TaskService","constructor","http","URL","httpOptions","headers","save","task","post","saveOrUpdate","id","update","put","delete","getTasks","get","getTask","getById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { Task } from \"./../model/task\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private URL = \"http://localhost:3000/tasks\";\n\n  task!: Task;\n  tasks!: Task[];\n\n  httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  save(task: Task): Observable<Task> {\n    return this.http.post<Task>(this.URL, task, this.httpOptions);\n  }\n\n  saveOrUpdate(task: Task): Observable<Task> {\n    if (task.id) {\n      return this.update(task);\n    } else {\n      return this.save(task);\n    }\n  }\n\n  update(task: Task): Observable<Task> {\n    return this.http.put<Task>(\n      `${this.URL}/${task.id}`,\n      task,\n      this.httpOptions\n    );\n  }\n\n  delete(id: number) {\n    return this.http.delete(`${this.URL}/${id}`);\n  }\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.URL);\n  }\n\n  getTask(task: Task): Observable<Task> {\n    return this.http.get<Task>(this.URL, task, this.httpOptions);\n  }\n\n  getById(id: number): Observable<Task> {\n    return this.http.get<Task>(`${this.URL}/${id}`);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,WAAW;EAUtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAThB,KAAAC,GAAG,GAAG,6BAA6B;IAK3C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEsC;EAEvCO,IAAIA,CAACC,IAAU;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,GAAG,EAAEI,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EAC/D;EAEAK,YAAYA,CAACF,IAAU;IACrB,IAAIA,IAAI,CAACG,EAAE,EAAE;MACX,OAAO,IAAI,CAACC,MAAM,CAACJ,IAAI,CAAC;KACzB,MAAM;MACL,OAAO,IAAI,CAACD,IAAI,CAACC,IAAI,CAAC;;EAE1B;EAEAI,MAAMA,CAACJ,IAAU;IACf,OAAO,IAAI,CAACL,IAAI,CAACU,GAAG,CAClB,GAAG,IAAI,CAACT,GAAG,IAAII,IAAI,CAACG,EAAE,EAAE,EACxBH,IAAI,EACJ,IAAI,CAACH,WAAW,CACjB;EACH;EAEAS,MAAMA,CAACH,EAAU;IACf,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,GAAG,IAAIO,EAAE,EAAE,CAAC;EAC9C;EAEAI,QAAQA,CAAA;IACN,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAS,IAAI,CAACZ,GAAG,CAAC;EACxC;EAEAa,OAAOA,CAACT,IAAU;IAChB,OAAO,IAAI,CAACL,IAAI,CAACa,GAAG,CAAO,IAAI,CAACZ,GAAG,EAAEI,IAAI,EAAE,IAAI,CAACH,WAAW,CAAC;EAC9D;EAEAa,OAAOA,CAACP,EAAU;IAChB,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACZ,GAAG,IAAIO,EAAE,EAAE,CAAC;EACjD;EAAC,QAAAQ,CAAA,G;qBA9CUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}