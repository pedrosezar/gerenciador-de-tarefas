{"ast":null,"code":"import { Constants } from \"src/app/util/constants\";\nimport { WebStorageUtil } from \"src/app/util/web-storage-util\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.URL = \"http://localhost:3000/tasks\";\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n  }\n  save(task) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.tasks.push(task);\n    WebStorageUtil.set(Constants.TASKS_KEY, this.tasks);\n  }\n  update(task) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.delete(task.title);\n    this.save(task);\n  }\n  delete(title) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.tasks = this.tasks.filter(t => {\n      return t.title?.valueOf() != title?.valueOf();\n    });\n    WebStorageUtil.set(Constants.TASKS_KEY, this.tasks);\n    return true;\n  }\n  isExist(value) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    for (let t of this.tasks) {\n      if (t.title?.valueOf() == value?.valueOf()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  getTasks() {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    console.log(this.tasks);\n    return this.tasks;\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["Constants","WebStorageUtil","TaskService","constructor","URL","tasks","get","TASKS_KEY","save","task","push","set","update","delete","title","filter","t","valueOf","isExist","value","getTasks","console","log","_","_2","factory","ɵfac","providedIn"],"sources":["/home/pedro/Documentos/Pastas pessoais/UTFPR - Guarapuava/2023-2/Tópicos Especiais/gerenciador-de-tarefas/src/app/services/task.service.ts"],"sourcesContent":["import { Constants } from \"src/app/util/constants\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { Task } from \"./../model/task\";\nimport { WebStorageUtil } from \"src/app/util/web-storage-util\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private URL = \"http://localhost:3000/tasks\";\n\n  tasks!: Task[];\n  constructor() {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n  }\n\n  save(task: Task) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.tasks.push(task);\n    WebStorageUtil.set(Constants.TASKS_KEY, this.tasks);\n  }\n\n  update(task: Task) {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.delete(task.title);\n    this.save(task);\n  }\n\n  delete(title: string): boolean {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    this.tasks = this.tasks.filter((t) => {\n      return t.title?.valueOf() != title?.valueOf();\n    });\n\n    WebStorageUtil.set(Constants.TASKS_KEY, this.tasks);\n    return true;\n  }\n\n  isExist(value: string): boolean {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    for (let t of this.tasks) {\n      if (t.title?.valueOf() == value?.valueOf()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getTasks(): Task[] {\n    this.tasks = WebStorageUtil.get(Constants.TASKS_KEY);\n    console.log(this.tasks);\n    return this.tasks;\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAMlD,SAASC,cAAc,QAAQ,+BAA+B;;AAK9D,OAAM,MAAOC,WAAW;EAItBC,YAAA;IAHQ,KAAAC,GAAG,GAAG,6BAA6B;IAIzC,IAAI,CAACC,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;EACtD;EAEAC,IAAIA,CAACC,IAAU;IACb,IAAI,CAACJ,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;IACpD,IAAI,CAACF,KAAK,CAACK,IAAI,CAACD,IAAI,CAAC;IACrBR,cAAc,CAACU,GAAG,CAACX,SAAS,CAACO,SAAS,EAAE,IAAI,CAACF,KAAK,CAAC;EACrD;EAEAO,MAAMA,CAACH,IAAU;IACf,IAAI,CAACJ,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;IACpD,IAAI,CAACM,MAAM,CAACJ,IAAI,CAACK,KAAK,CAAC;IACvB,IAAI,CAACN,IAAI,CAACC,IAAI,CAAC;EACjB;EAEAI,MAAMA,CAACC,KAAa;IAClB,IAAI,CAACT,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;IACpD,IAAI,CAACF,KAAK,GAAG,IAAI,CAACA,KAAK,CAACU,MAAM,CAAEC,CAAC,IAAI;MACnC,OAAOA,CAAC,CAACF,KAAK,EAAEG,OAAO,EAAE,IAAIH,KAAK,EAAEG,OAAO,EAAE;IAC/C,CAAC,CAAC;IAEFhB,cAAc,CAACU,GAAG,CAACX,SAAS,CAACO,SAAS,EAAE,IAAI,CAACF,KAAK,CAAC;IACnD,OAAO,IAAI;EACb;EAEAa,OAAOA,CAACC,KAAa;IACnB,IAAI,CAACd,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;IACpD,KAAK,IAAIS,CAAC,IAAI,IAAI,CAACX,KAAK,EAAE;MACxB,IAAIW,CAAC,CAACF,KAAK,EAAEG,OAAO,EAAE,IAAIE,KAAK,EAAEF,OAAO,EAAE,EAAE;QAC1C,OAAO,IAAI;;;IAGf,OAAO,KAAK;EACd;EAEAG,QAAQA,CAAA;IACN,IAAI,CAACf,KAAK,GAAGJ,cAAc,CAACK,GAAG,CAACN,SAAS,CAACO,SAAS,CAAC;IACpDc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAAC;IACvB,OAAO,IAAI,CAACA,KAAK;EACnB;EAAC,QAAAkB,CAAA,G;qBA5CUrB,WAAW;EAAA;EAAA,QAAAsB,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}